classDiagram
  direction TB

  class IObserver {
    <<interface>>
    +Update() void
  }

  class AbstractObserver {
    +AbstractObserver(ISubject* subject)
    +GetSubject() std::weak_ptr~ISubject~
    -std::weak_ptr~ISubject~ m_subject
  }

  class AbstractStatsObserver {
    #UpdateStatistics(value) void
    #PrintValues(name) void
    -ValueType m_minValue
    -ValueType m_maxValue
    -ValueType m_accValue
  }

  class Display {
    -Update() void
  }

  class PressureStatsDisplay {
    -Update() void
  }
  class HumStatsDisplay {
    -Update() void
  }

  class TemperatureStatsDisplay {
    -Update() void
  }

  IObserver ..|> AbstractObserver
  AbstractObserver --|> AbstractStatsObserver
  AbstractObserver --|> Display
  AbstractStatsObserver --|> PressureStatsDisplay
  AbstractStatsObserver --|> HumStatsDisplay
  AbstractStatsObserver --|> TemperatureStatsDisplay

  AbstractObserver o--> ISubject

  class ISubject {
    <<interface>>
    +RegisterObserver(IObserver<T>& observer) void
    +NotifyObservers() void
    +RemoveObserver(IObserver<T>& observer) void
    +GetData() T
  }

  class Subject {
    #GetChangedData() T
    -m_observers std::set~std::weak_ptr~IObserver~~
  }

  class WeatherData {
    +GetTemperature() double
    +GetHumidity() double
    +GetPressure() double
    +MeasurementsChanged() void
    +GetData() WeatherInfo

    +SetMeasurements(double temp, double humidity, double pressure) void

    m_temperature double 
    m_humidity double 
    m_pressure double 
  }

  ISubject ..|> Subject
  Subject --|> WeatherData

  Subject o--> IObserver
  WeatherData --> WeatherInfo : creates

  class WeatherInfo {
    +temperature double 
    +humidity double 
    +pressure double 
  }
