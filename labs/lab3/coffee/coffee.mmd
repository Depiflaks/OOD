classDiagram
  direction TB

  class IBeverage {
    <<interface>>
    +GetDescription() std::string = 0
    +GetCost() double = 0
  }

  class Coffee {
    +GetCost() double
    +GetDescription() std::string

    -CoffeePortion m_portion
  }

  class Cappuccino {
    +Cappuccino(CappuccinoPortion portion)
    +GetDescription() std::string
    +GetCost() double
  }

  class Latte {
    +Latte(LattePortion portion)
    +GetDescription() std::string
    +GetCost() double
  }

  class CoffeePortion {
    <<enum>>
    Standard
    Double
  }

  class Tea {
    +Tea(TeaSort sort)
    +GetCost() double
    +GetDescription() std::string
    -TeaSort m_sort
  }

  class TeaSort {
    <<enum>>
    Green
    Black
    Herbal
  }

  class Milkshake {
    +Milkshake(MilkshakeSize size)
    +GetCost() double
    +GetDescription() std::string
    -MilkshakeSize m_size
  }

  class MilkshakeSize {
    <<enum>>
    Small
    Medium
    Large
  }

  IBeverage <|.. Beverage
  Coffee <|-- Cappuccino
  Coffee <|-- Latte
  Beverage <|-- Tea
  Beverage <|-- Milkshake

  Cappuccino --> CoffeePortion : use
  Latte --> CoffeePortion : use
  Tea --> TeaSort : use
  Milkshake --> MilkshakeSize : use

  class CondimentDecorator {
    +GetDescription() std::string
    +GetCost() double
    +GetCondimentDescription() std::string = 0
    +GetCondimentCost() double = 0

    -IBeveragePtr m_beverage
  }

  class Cinnamon {
	  +Cinnamon(IBeveragePtr&& beverage)

    #GetCondimentDescription() std::string
    #GetCondimentCost() double
  }

  class Lemon {
    +Lemon(IBeveragePtr&& beverage, unsigned quantity = 1)
    -unsigned m_quantity
  }

  class IceCubeType {
    <<enum>>
    Dry
    Water
  }

  class IceCubes {
    +IceCubes(IBeveragePtr&& beverage, unsigned quantity, IceCubeType type)
    -unsigned m_quantity
	  -IceCubeType m_type
  }

  class SyrupType {
    <<enum>>
    Chocolate
    Maple
  }

  class Syrup {
    +Syrup(IBeveragePtr&& beverage, SyrupType syrupType)

    -SyrupType m_syrupType
  }

  class ChocolateCrumbs {
	  +ChocolateCrumbs(IBeveragePtr&& beverage, unsigned mass)

	  -unsigned m_mass
  }

  class CoconutFlakes {
  	+CoconutFlakes(IBeveragePtr&& beverage, unsigned mass)
	  -unsigned m_mass
  }

  class Cream {
    +Cream(IBeveragePtr&& beverage)
    #GetCondimentDescription() std::string
    #GetCondimentCost() double
  }

  class Chocolate {
    +Chocolate(IBeveragePtr&& beverage, unsigned quantity)
    -unsigned m_quantity
    #GetCondimentDescription() std::string
    #GetCondimentCost() double
  }

  class LiquorType {
    <<enum>>
    Nut
    Chocolate
  }

  class Liquor {
    +Liquor(IBeveragePtr&& beverage, LiquorType type)
    -LiquorType m_type
    #GetCondimentDescription() std::string
    #GetCondimentCost() double
  }

  Liquor --> LiquorType : use
  IceCubes --> IceCubeType : use
  Syrup --> SyrupType : use

  IBeverage <|.. CondimentDecorator
  CondimentDecorator <|-- Cream
  CondimentDecorator <|-- Chocolate
  CondimentDecorator <|-- Liquor
  CondimentDecorator <|-- Cinnamon
  CondimentDecorator <|-- Lemon
  CondimentDecorator <|-- IceCubes
  CondimentDecorator <|-- Syrup : use
  CondimentDecorator <|-- ChocolateCrumbs : use
  CondimentDecorator <|-- CoconutFlakes
